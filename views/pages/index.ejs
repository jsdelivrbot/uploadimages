<!DOCTYPE html>
<html>
<head>
  <% include ../partials/header.ejs %>
</head>

<body>

  <% include ../partials/nav.ejs %>

<div class="jumbotron text-center">
  <div class="container">
    <a href="/" class="lang-logo">
      <img src="/lang-logo.png">
    </a>
    <h1>Upload Images Of Your Car</h1>
    <p>User can upload multiple images for their cars</p>
    <a type="button" class="btn btn-lg btn-primary" href="https://github.com/vikasbguru/awschatbot-unleashed"><span class="glyphicon glyphicon-download"></span> Source on GitHub</a>
  </div>
</div>
<div class="container">
  <div class="alert alert-info text-center" role="alert">
    To learn more about Amazon Lex head over to <a href="https://aws.amazon.com/lex/" class="alert-link">Getting Started with Amazon Lex on AWS</a> tutorial.
  </div>
  <hr>

   <div class="row">
    <div class="col-md-6">
      <h3><span class="glyphicon glyphicon-link"></span> Specify Reference Details You Got From Bot</h3>
      <ul>
            <li>
              <input type="text" id="ReferenceNo" required>
              <hr>
              <input type="file" id="file-input" required> 
              <hr>
              <input type="button" value="Upload" onclick="initUpload();">
        </li>
        
      </ul>
    </div>
  </div> <!-- row -->
</div>
 <hr>

    <script>

    /*
      Function to carry out the actual PUT request to S3 using the signed request from the app.
    */
    function uploadFile(file, signedRequest, url){
      const xhr = new XMLHttpRequest();
      xhr.open('PUT', signedRequest);
      xhr.onreadystatechange = () => {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
           alert("File Uploaded Successfully");
          }
          else{
            alert('Could not upload file.');
          }
        }
      };
      xhr.send(file);
    }
    /*
      Function to get the temporary signed request from the app.
      If request successful, continue to upload the file using this signed
      request.
    */
    function getSignedRequest(file,URef){
      const xhr = new XMLHttpRequest();

      xhr.open('GET', `/sign-s3?file-name=${URef + '$'}${file.name}&file-type=${file.type}`);
      xhr.onreadystatechange = () => {
        if(xhr.readyState === 4){
          if(xhr.status === 200){
            const response = JSON.parse(xhr.responseText);
            uploadFile(file, response.signedRequest, response.url);
          }
          else{
            alert('Could not get signed URL.');
          }
        }
      };
      xhr.send();
    }
    /*
     Function called when file input updated. If there is a file selected, then
     start upload procedure by asking for a signed request from the app.
    */
    function initUpload(){
      const files = document.getElementById('file-input').files;
      const URef = document.getElementById('ReferenceNo').value;
      const file=files[0];


      if(URef == ""){
        return alert('Please Specify The Unique Reference.');
      }

      if(file == null){
        return alert('Please Select a file to upload.');
      }

      
      getSignedRequest(file,URef);
    }

     /*
     Bind listeners when the page loads.
    */
    /*(() => {
        document.getElementById('file-input').onchange = initUpload;
    })();*/


    </script>


</body>
</html>
